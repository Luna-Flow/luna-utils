package Luna-Flow/luna-utils

alias @Luna-Flow/luna-generic as @luna-generic

// Values
fn arr_abs_sum[A : @luna-generic.Num + Compare](Array[A]) -> A

fn arr_sum[A : @luna-generic.AddMonoid](Array[A]) -> A

fn clamp[T : Compare](T, T, T) -> T

fn find[T : Eq](Array[T], T) -> Int?

fn is_between[T : Compare](T, T, T) -> Bool

fn reverse[T](Array[T]) -> Array[T]

fn reverse_inplace[T](Array[T]) -> Unit

fn zero_arr[A : @luna-generic.AddMonoid](Int) -> Array[A]

// Types and methods

// Type aliases

// Traits

